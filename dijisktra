#include<bits/stdc++.h>
using namespace std;
int main(){
    int n;
    cin>>n;
    int graph[n][n];
    for(int i=0;i<n;i++){
        for(int  j=0;j<n;j++){
            cin>>graph[i][j];
        }
    }
    int src;
    cin>>src;
    const int INF=1e9;
    vector<int> dist(n,INF);
    dist[src]=0;
    priority_queue<pair<int,int>,vector<pair<int,int>>,greater<>> pq;
    pq.push({0,src});
    while(!pq.empty()){
        auto[d,u]=pq.top();
        pq.pop();
        if(dist[u]<d){
            continue;
        }
        for(int v=0;v<n;v++){
            if(graph[u][v]!=0 && u!=v){
                if(dist[u]+graph[u][v]<dist[v]){
                    dist[v]=dist[u]+graph[u][v];
                    pq.push({dist[v],v});
                }
            }
        }
    }
    cout<<"Vertex \tDistance from Source"<<endl;
    for(int i=0;i<n;i++){
        cout<<i<<"\t\t\t "<<dist[i]<<"\n";
    }
}
