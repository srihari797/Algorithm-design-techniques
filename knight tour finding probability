#include <bits/stdc++.h>
using namespace std;

int n, K;
int dx[8] = {2, 2, 1, 1, -1, -1, -2, -2};
int dy[8] = {1, -1, 2, -2, 2, -2, 1, -1};

double backtrack(int k, int r, int c) {
    if (r < 0 || r >= n || c < 0 || c >= n) return 0.0;
    if (k == 0) return 1.0;
    
    double prob = 0.0;
    for (int i = 0; i < 8; i++) {
        prob += backtrack(k - 1, r + dx[i], c + dy[i]) / 8.0;
    }
    return prob;
}

int main() {
    int row, col;
    cin >> n >> K >> row >> col;
    
    double ans = backtrack(K, row, col);
    cout << fixed << setprecision(5) << ans << endl;
    return 0;
}
